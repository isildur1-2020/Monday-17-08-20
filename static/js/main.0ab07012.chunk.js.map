{"version":3,"sources":["Components/js/Calendar.js","Components/Header.js","Components/Days.js","Components/Squares.js","Components/Schedule.js","Components/Category.js","Components/Form.js","Components/Tasks.js","App.js","index.js"],"names":["Calendar","monthToShow","moment","isMoment","dateStart","startOf","dateEnd","endOf","cells","day","subtract","add","push","date","isInCurrentMonth","month","isSelect","isSameOrBefore","Header","props","className","name","onClick","handleClick","daysOfWeek","Days","map","index","key","Squares","ref","dates","data","cell","Schedule","changeMonth","ev","nodos","current","childNodes","i","length","classList","remove","target","setState","state","showDays","schedule","generateDates","handleClickCell","contains","numberCell","getAttribute","format","React","createRef","this","Component","Category","isJob","Form","onSubmit","handleSubmit","onChange","handleChange","type","placeholder","handleClickSend","Tasks","task","identify","text","quit","App","form","handleChangeForm","value","handleSubmitForm","preventDefault","handleClickSendForm","a","cloneForm","cloneTasks","tasks","agree","concat","handleClickDelete","slice","splice","handleClickIsJob","cc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ab07012.chunk.js","sourcesContent":["import moment from \"moment\";\r\n\r\nexport default class Calendar {\r\n  generateDates(monthToShow = moment()) {\r\n    if (!moment.isMoment(monthToShow)) {\r\n      return null;\r\n    }\r\n    let dateStart = moment(monthToShow).startOf(\"month\");\r\n    let dateEnd = moment(monthToShow).endOf(\"month\");\r\n    let cells = [];\r\n    // OBTENIENDO EL PRIMER DÍA A MOSTRAR EN CALENDARIO\r\n    while (dateStart.day() !== 1) {\r\n      dateStart.subtract(1, \"day\");\r\n    }\r\n    // OBTENIENDO EL ÚLTIMO DÍA A MOSTRAR EN CALENDARIO\r\n    while (dateEnd.day() !== 0) {\r\n      dateEnd.add(1, \"day\");\r\n    }\r\n    // OBTENER TODOS LOS DÍAS DEL MES A MOSTRAR\r\n    do {\r\n      cells.push({\r\n        date: moment(dateStart),\r\n        isInCurrentMonth: dateStart.month() === monthToShow.month(),\r\n        isSelect: false\r\n      });\r\n      dateStart.add(1, \"day\");\r\n    } while (dateStart.isSameOrBefore(dateEnd));\r\n\r\n    return cells;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Styles/Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"calendar__header\">\r\n      <button\r\n        className=\"calendar__control\"\r\n        name=\"previous\"\r\n        onClick={props.handleClick}\r\n      >\r\n        &lt;\r\n      </button>\r\n      <span>{props.month}</span>\r\n      <button\r\n        className=\"calendar__control\"\r\n        name=\"next\"\r\n        onClick={props.handleClick}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n// ESTILOS CSS\r\nimport \"./Styles/Days.css\";\r\n\r\nconst daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Friday\", \"Sat\", \"Sun\"];\r\n\r\nconst Days = () => {\r\n  return (\r\n    <div className=\"grid__header\">\r\n      {daysOfWeek.map((day, index) => (\r\n        <span key={index} className=\"grid__cell\">{day}</span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Days;\r\n","import React from \"react\";\r\n\r\nimport \"./Styles/Squares.css\";\r\n\r\nconst Squares = (props) => {\r\n  return (\r\n    <div className=\"grid__body\" ref={props.dates}>\r\n      {props.data.map((day, index) =>\r\n        day.isInCurrentMonth ? (\r\n          <span\r\n            key={index}\r\n            cell={index}\r\n            className=\"grid__cell grid__cell--days\"\r\n            onClick={props.handleClick}\r\n          >\r\n            {day.date.date()}\r\n          </span>\r\n        ) : (\r\n          <span\r\n            key={index}\r\n            cell={index}\r\n            className=\"grid__cell grid__cell--days grid__cell--disabled\"\r\n            onClick={props.handleClick}\r\n          >\r\n            {day.date.date()}\r\n          </span>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Squares;\r\n","// REACT - MOMENT\r\nimport React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\n// ESTILOS\r\nimport \"./Styles/Schedule.css\";\r\n// LÓGICA DEL CALENDARIO\r\nimport Calendar from \"./js/Calendar\";\r\n// SUB - COMPONENTES\r\nimport Header from \"./Header\";\r\nimport Days from \"./Days\";\r\nimport Squares from \"./Squares\";\r\n\r\nexport default class Schedule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.moment = moment();\r\n    this.schedule = new Calendar();\r\n    this.dates = React.createRef();\r\n    this.state = {\r\n      moment: this.moment,\r\n      showDays: this.schedule.generateDates(),\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        <div className=\"calendar__container\">\r\n          <Header\r\n            handleClick={this.changeMonth}\r\n            month={this.state.moment.format(\"MMM YYYY\")}\r\n          />\r\n          <div className=\"calendar__body\">\r\n            <div className=\"grid\">\r\n              <Days />\r\n              <Squares\r\n                dates={this.dates}\r\n                data={this.state.showDays}\r\n                handleClick={this.handleClickCell}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  changeMonth = (ev) => {\r\n    let nodos = this.dates.current.childNodes;\r\n    this.props.handleClick('')\r\n    for (let i = 0; i < nodos.length; i++) {\r\n      nodos[i].classList.remove(\"grid__cell_selected\");\r\n    }\r\n    if (ev.target.name === \"previous\") {\r\n      this.setState({\r\n        moment: this.state.moment.subtract(1, \"month\"),\r\n        showDays: this.schedule.generateDates(this.state.moment),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        moment: this.state.moment.add(1, \"month\"),\r\n        showDays: this.schedule.generateDates(this.state.moment),\r\n      });\r\n    }\r\n  };\r\n  handleClickCell = (ev) => {\r\n    if(ev.target.classList.contains('grid__cell--disabled')){\r\n      return\r\n    }\r\n    //Seleccionando el cuadro del estado y elevando el estado\r\n    let numberCell = ev.target.getAttribute(\"cell\");\r\n    let date = this.state.showDays[numberCell].date.format(\"LL\");\r\n    this.props.handleClick(date)\r\n    //lógica para colorear días\r\n    let nodos = this.dates.current.childNodes;\r\n    for (let i = 0; i < nodos.length; i++) {\r\n      if (\r\n        nodos[i].classList.contains(\"grid__cell_selected\") &&\r\n        ev.target !== nodos[i]\r\n      ) {\r\n        nodos[i].classList.remove(\"grid__cell_selected\");\r\n      }\r\n    }\r\n    if (!ev.target.classList.contains(\"grid__cell_selected\")) {\r\n      if (!ev.target.classList.contains(\"grid__cell--disabled\")) {\r\n        ev.target.classList.add(\"grid__cell_selected\");\r\n        return;\r\n      }\r\n    }\r\n    ev.target.classList.remove(\"grid__cell_selected\");\r\n  };\r\n}\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport \"./Styles/Category.css\";\r\n\r\nconst Category = (props) => {\r\n  if (!props.isJob) {\r\n    return (\r\n        <Fragment>\r\n            <button onClick={props.handleClick} className=\"notJob\">\r\n            <span>&lt;</span>\r\n            <p>Holidays !</p>\r\n            <span>&gt;</span>\r\n            </button>\r\n        </Fragment>\r\n    )\r\n  }\r\n  return (\r\n    <Fragment>\r\n        <button onClick={props.handleClick} className=\"isJob\">\r\n        <span>&lt;</span>\r\n        <p>Employ:(</p>\r\n        <span>&gt;</span>\r\n        </button>\r\n    </Fragment>\r\n)\r\n};\r\nexport default Category;\r\n","import React, { Component } from 'react'\r\n\r\nimport './Styles/Form.css'\r\n\r\nimport Category from './Category'\r\n\r\nexport default class Form extends Component {\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.props.handleSubmit} className=\"form\">\r\n                <h1>\r\n                    Task´s Register<br />\r\n                    {this.props.date || \"choose a date\"}\r\n                </h1>\r\n                <Category handleClick={this.props.handleClick} isJob={this.props.isJob} />\r\n                <input className=\"form-input\" onChange={this.props.handleChange} name=\"identify\" type=\"text\" placeholder=\"identification\" />\r\n                <input className=\"form-input\" onChange={this.props.handleChange} name=\"text\" type=\"text\" placeholder=\"Write your task\" />\r\n                <button onClick={this.props.handleClickSend}>Create !</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport './Styles/Tasks.css'\r\n\r\nexport default class Tasks extends Component {\r\n    render() {\r\n        if(this.props.data.length>0){\r\n            return(\r\n                <div className=\"tasks\">\r\n                  <h1>YOUR TASKS !!!</h1>\r\n                  {this.props.data.map((task, index) => (\r\n                      <div key={index} className=\"task\">\r\n                          <span>Task n° {index+1}</span>\r\n                          <span>Date: {task.date}</span>\r\n                          <span>Category: {task.isJob ? 'Job :((': 'Holidays !!!'}</span>\r\n                          <span>Identication: {task.identify}</span>\r\n                          <span>Task: {task.text}</span>\r\n                          <button onClick={this.props.handleClick} className=\"quit\" quit={index}>delete</button>\r\n                      </div>\r\n                  ))}\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"tasks\">\r\n                <h1>Please add a task...</h1>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Schedule from \"./Components/Schedule\";\r\nimport Form from \"./Components/Form\";\r\nimport Tasks from \"./Components/Tasks\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      form: {\r\n        date: '',\r\n        isJob: false,\r\n        identify: ' ',\r\n        text: ' '\r\n      },\r\n      tasks: []\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"app-container\">\r\n          <Schedule handleClick={this.handleClickCell} />\r\n          <Form\r\n            cc={this.state.form.cc}\r\n            text={this.state.form.text}\r\n            date={this.state.form.date}\r\n            isJob={this.state.form.isJob}\r\n            handleSubmit={this.handleSubmitForm}\r\n            handleChange={this.handleChangeForm}\r\n            handleClick={this.handleClickIsJob}\r\n            handleClickSend={this.handleClickSendForm}\r\n          />\r\n        </div>\r\n        <Tasks data={this.state.tasks} handleClick={this.handleClickDelete}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n  handleClickCell = (data) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form, \r\n        date: data\r\n      }\r\n    })\r\n  };\r\n  handleChangeForm = (ev) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form, \r\n        [ev.target.name]: ev.target.value\r\n      }\r\n    })\r\n  };\r\n  handleSubmitForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  handleClickSendForm = async (ev) => {\r\n    let cloneForm = this.state.form\r\n    let cloneTasks = this.state.tasks\r\n    let agree = cloneTasks.concat(cloneForm)\r\n    await this.setState({tasks: agree})\r\n  }\r\n  handleClickDelete = async(ev) => {\r\n    let tasks = this.state.tasks.slice(0)\r\n    tasks.splice(ev.target.getAttribute('quit'), 1)\r\n    this.setState({tasks: tasks})\r\n  }\r\n  handleClickIsJob = ev => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form, \r\n        isJob: this.state.form.isJob ? false : true\r\n      }\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}